---

# AI TestMate Redis Server

replicaCount: 3

image:
  repository: artifactoryspb.epam.com/epm-eag-docker/aitestmate/worker
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []

# This is to override the chart name.
nameOverride: "aitestmate-worker"
fullnameOverride: "aitestmate-worker"

env:
  # @param host for database connection
  - name: ELASTICSEARCH_HOST
    value: http://aitestmate-elasticsearch-headless:9200
  # @param user for database connection
  - name: ELASTICSEARCH_USER
    valueFrom:
      secretKeyRef:
        name: aitestmate-elasticsearch-secret
        key: username
  # @param password for database connection
  - name: ELASTICSEARCH_PASSWORD
    valueFrom:
      secretKeyRef:
        name: aitestmate-elasticsearch-secret
        key: password
  - name: RABBITMQ_HOST
    value: aitestmate-rabbitmq-headless
  - name: RABBITMQ_PORT
    value: "5672"
  - name: RABBITMQ_USER
    valueFrom:
      secretKeyRef:
        name: aitestmate-rabbitmq-secret
        key: username
  - name: RABBITMQ_PASSWORD
    valueFrom:
      secretKeyRef:
        name: aitestmate-rabbitmq-secret
        key: password
  - name: RABBITMQ_VHOST
    valueFrom:
      secretKeyRef:
        name: aitestmate-rabbitmq-secret
        key: vhost
  - name: REDIS_HOST
    value: aitestmate-redis-headless
  - name: REDIS_PASSWORD
    valueFrom:
      secretKeyRef:
        name: aitestmate-redis-secret
        key: password

  # @param loglevel, 20 - info
  - name: AITESTMATE_LOGLEVEL
    value: "20"
  # @param do not re-run tests under delivery
  - name: DELIVERY_SKIP_TESTS
    value: "true"
  # @param if enabled no MR will be created
  - name: DELIVERY_SAFE_MODE
    value: "false"

  # Langfuse observability
  # - name: LANGFUSE_HOST
  #   value: https://langfuse.epm-eag.projects.epam.com
  # - name: LANGFUSE_SSL_VERIFY
  #   value: "false"
  # - name: LANGFUSE_PUBLIC_KEY
  #   value: pk-lf-12312312-1231-1231-1231-123123123123
  # - name: LANGFUSE_SECRET_KEY
  #   value: sk-lf-12312312-1231-1231-1231-123123123123

  # @param use standalone embeddings. See aitestmate-embeddings chart.
  - name: USE_EMBEDDINGS_HTTP_API
    value: "true"
  # @param embeddings endpoint to use
  - name: EMBEDDINGS_LLM_BASE_URL
    value: http://aitestmate-embeddings:7070

  # @param LLM Provider and configuration
  # - name: LLM_PROVIDER_CONFIG_NAME
  #   value: google
  # - name: LLM_PROVIDER_CONFIG_LOCATION_ID
  #   value: global
  # - name: LLM_PROVIDER_CONFIG_PROJECT_ID
  #   value: or2-msq-epm-eag-t1iylu
  # - name: LLM_MODEL_CONFIG_NAME
  #   value: gemini-2.5-pro
  # - name: LLM_MODEL_CONFIG_TRACING_NAME
  #   value: gemini-2.5-pro
  # - name: LLM_MODEL_CONFIG_STRUCTURED_OUTPUT_SUPPORT
  #   value: "true"
  # - name: LLM_MODEL_CONFIG_TOOL_CHOICE
  #   value: auto
  # - name: LLM_MODEL_CONFIG_THINKING_SUPPORT
  #   value: "true"
  # - name: LLM_MODEL_CONFIG_THINKING_BUDGET
  #   value: "1024"

  # - name: CODEMIE_BASE_URL
  #   value: https://codemie-preview.lab.epam.com/code-assistant-api
  # - name: CODEMIE_IGNORE_SSL_ERRORS
  #   value: "true"
  # - name: CODEMIE_CLIENT_ID
  #   value: aitm-client-id
  # - name: CODEMIE_CLIENT_SECRET
  #   value: very-secret
  # - name: CODEMIE_PRINCIPAL_ID
  #   value: service-account-testmate
  # - name: CODEMIE_KEY_ID
  #   value: codemiekeyid

  # @param encryption configuration
  # - name: KMS_KEY_RING_ID
  #   value: google-ring-id

  # - name: SMTP_HOST
  #   value: smtp-server.cluster.svc.local
  # - name: SMTP_PORT
  #   value: "9999"
  # - name: SMTP_USER
  #   value: mailer
  # - name: SMTP_PASSWORD
  #   value: withoutpassword
  # - name: SMTP_FROM_EMAIL
  #   value: ai_testmate@epam.com

# Additional environment passed into container
extraEnv: []


# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe: {}
  # httpGet:
  # path: /
  # port: http
readinessProbe: {}
  # httpGet:
  # path: /
  # port: http

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
